import { PrismaService } from '../prisma/prisma.service';
export declare class UsersService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    createUser(params: {
        email: string;
        fullName: string;
        hashedPassword: string;
        phone?: string | null;
        streamId?: string;
        emailVerified?: boolean;
    }): import(".prisma/client").Prisma.Prisma__UserClient<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    findByEmail(email: string): import(".prisma/client").Prisma.Prisma__UserClient<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    findByPhone(phone: string): import(".prisma/client").Prisma.Prisma__UserClient<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    findById(id: string): import(".prisma/client").Prisma.Prisma__UserClient<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    setEmailVerified(userId: string): Promise<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    }>;
    setPhoneVerified(userId: string): Promise<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    }>;
    updateTrial(userId: string, startedAt: Date, endsAt: Date): Promise<{
        id: string;
        email: string;
        phone: string | null;
        emailVerified: boolean;
        phoneVerified: boolean;
        hashedPassword: string | null;
        fullName: string;
        role: import(".prisma/client").$Enums.UserRole;
        googleId: string | null;
        profilePicture: string | null;
        createdAt: Date;
        updatedAt: Date;
        trialStartedAt: Date | null;
        trialEndsAt: Date | null;
        aiTestsUsed: number;
        aiTestsLimit: number;
        lastAiResetAt: Date | null;
        streamId: string | null;
    }>;
}
