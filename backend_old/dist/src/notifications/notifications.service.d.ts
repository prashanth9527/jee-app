import { PrismaService } from '../prisma/prisma.service';
import { CreateNotificationDto } from './dto/create-notification.dto';
import { UpdateNotificationDto } from './dto/update-notification.dto';
import { UserRole } from '@prisma/client';
export declare class NotificationsService {
    private prisma;
    constructor(prisma: PrismaService);
    create(createNotificationDto: CreateNotificationDto): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }>;
    findAll(): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }[]>;
    findActive(): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }[]>;
    findForRole(role: UserRole): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }[]>;
    findOne(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    } | null>;
    update(id: string, updateNotificationDto: UpdateNotificationDto): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }>;
    remove(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }>;
    toggleActive(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        title: string;
        link: string | null;
        message: string | null;
        validFrom: Date;
        validUntil: Date;
        priority: import(".prisma/client").$Enums.NotificationPriority;
        targetRole: import(".prisma/client").$Enums.UserRole;
    }>;
}
